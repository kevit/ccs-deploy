#!/bin/sh
#cgiproxy init script
## BEGIN INIT INFO
# Provides:          cgiproxy
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      $portmap
# Should-Stop:       $portmap
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Cgiproxy Fcgi initscript
# Description:       Cgiproxy initscript
### END INIT INFO

PATH=/sbin:/bin:/opt/cgiproxy
name="cgiproxy"
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

get_pid() {
  cat "$pid_file"
}

is_running() {
  [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
start)
  if is_running; then
    echo "Already started"
  else
    echo "Starting.."
    nph-proxy.cgi start-fcgi -n 10 >> "$stdout_log" 2>> "$stderr_log" &
            echo $! > "$pid_file"
            if ! is_running; then
              echo "Unable to start"
              exit 1
            fi
  fi
;;
stop)
  if is_running; then
    echo -n "Stopping $name.."
    kill `get_pid`
#    killall -9 perl-fcgi
    for i in {1..10}
    do
      if ! is_running; then
      break
      fi

      echo -n "."
      sleep 1
    done

    if is_running; then
      echo "Not stopped; may still be shutting down or shutdown may have failed"
      exit 1
    else
      echo "Stopped"
      if [ -f "$pid_file" ]; then
      rm "$pid_file"
      fi
    fi
  else
  echo "Not running"
  fi
;;
restart)
$0 stop
if is_running; then
  echo "Unable to stop, will not attempt to start"
  exit 1
fi
$0 start
;;
*)
  echo "Usage: cgiproxy [start|stop|restart]" >&2
  exit 3
;;
esac
